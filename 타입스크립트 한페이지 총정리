<타입스크립트 설치>
    터미널 실행후
    npm i -g typescript
    <!--
        npm i (설치한다)
        -g(전역설치)
        typescript(타입스크립트)
        -g를 입력하지 않으면 해당 폴더에서만 타입스크립트가 설치되어 전역사용(모든 폴더에서 사용)이 불가능함
    -->
<시스템 환경변수에 타입스크립트 추가>
    제어판 -> 시스템 - 고급 시스템 설정 -> 환경변수
    시스템 변수 -> Path -> 편집 -> 새로만들기
    C:\Users\사용자 이름\AppData\Roaming\npm 추가
<ts파일 생성>
    코딩 후 터미널에 tsc -w 실행


<!-- 이후 본인이 겪은 설치시 오류 -->
PowerShell 보안오류가 나옴
PowerShell 실행 정책으로 인한 오류
터미널
Set-ExecutionPolicy RemoteSigned 실행

Set-ExecutionPolicy RemoteSigned ?
보안 단계를 RemoteSigned로 설정(변경)

RemoteSigned 직접 작성한 스크립트 파일은 실행가능
다운로드한 스크립트 파일은 전자 서명을 확인하고 승인해야 실행이 가능한 보안단계

───────────────────────────────────────────────────────────────────────────────────────────────
<타입스크립트를 사용하는 이유>
    <정확한 데이터 타입 검사>
        자바스크립트의 경우 10 - '1' = 9; 는 9로 출력됨 (다이나믹 타이핑)
        보통은 장점이지만, 큰 규모의 프로젝트의 경우 이것은 오히려 단점
        Typescript는 Javascript와 다르게 데이터타입을 엄격하게 검사하여 오류를 출력

    <변수 선언시 타입 등록 가능>
        타입스크립트는 자바스크립트와 다르게 변수의 데이터 타입을 설정할 수 있음
        설정된 타입과 다른 데이터타입이 들어올 시 오류 출력

    <자세한 오류 반환>
        자바스크립트에 비해 타입스크립트는 상세한 오류 출력함

───────────────────────────────────────────────────────────────────────────────────────────────

───────────────────────────────────────────────────────────────────────────────────────────────
───────────────────────────────────────────────────────────────────────────────────────────────
───────────────────────────────────────────────────────────────────────────────────────────────
───────────────────────────────────────────────────────────────────────────────────────────────
───────────────────────────────────────────────────────────────────────────────────────────────
───────────────────────────────────────────────────────────────────────────────────────────────